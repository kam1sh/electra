// Code generated by Wire protocol buffer compiler, do not edit.
// Source: runtime.v1alpha2.ExecSyncResponse in io/k8s/cri_api.proto
package runtime.v1alpha2

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import kotlin.hashCode
import kotlin.jvm.JvmField
import okio.ByteString

class ExecSyncResponse(
  /**
   * Captured command stdout output.
   */
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#BYTES",
    label = WireField.Label.OMIT_IDENTITY
  )
  val stdout: ByteString = ByteString.EMPTY,
  /**
   * Captured command stderr output.
   */
  @field:WireField(
    tag = 2,
    adapter = "com.squareup.wire.ProtoAdapter#BYTES",
    label = WireField.Label.OMIT_IDENTITY
  )
  val stderr: ByteString = ByteString.EMPTY,
  /**
   * Exit code the command finished with. Default: 0 (success).
   */
  @field:WireField(
    tag = 3,
    adapter = "com.squareup.wire.ProtoAdapter#INT32",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "exitCode"
  )
  val exit_code: Int = 0,
  unknownFields: ByteString = ByteString.EMPTY
) : Message<ExecSyncResponse, Nothing>(ADAPTER, unknownFields) {
  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN
  )
  override fun newBuilder(): Nothing = throw AssertionError()

  override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is ExecSyncResponse) return false
    if (unknownFields != other.unknownFields) return false
    if (stdout != other.stdout) return false
    if (stderr != other.stderr) return false
    if (exit_code != other.exit_code) return false
    return true
  }

  override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + stdout.hashCode()
      result = result * 37 + stderr.hashCode()
      result = result * 37 + exit_code.hashCode()
      super.hashCode = result
    }
    return result
  }

  override fun toString(): String {
    val result = mutableListOf<String>()
    result += """stdout=$stdout"""
    result += """stderr=$stderr"""
    result += """exit_code=$exit_code"""
    return result.joinToString(prefix = "ExecSyncResponse{", separator = ", ", postfix = "}")
  }

  fun copy(
    stdout: ByteString = this.stdout,
    stderr: ByteString = this.stderr,
    exit_code: Int = this.exit_code,
    unknownFields: ByteString = this.unknownFields
  ): ExecSyncResponse = ExecSyncResponse(stdout, stderr, exit_code, unknownFields)

  companion object {
    @JvmField
    val ADAPTER: ProtoAdapter<ExecSyncResponse> = object : ProtoAdapter<ExecSyncResponse>(
      FieldEncoding.LENGTH_DELIMITED, 
      ExecSyncResponse::class, 
      "type.googleapis.com/runtime.v1alpha2.ExecSyncResponse", 
      PROTO_3, 
      null
    ) {
      override fun encodedSize(value: ExecSyncResponse): Int {
        var size = value.unknownFields.size
        if (value.stdout != ByteString.EMPTY) size += ProtoAdapter.BYTES.encodedSizeWithTag(1,
            value.stdout)
        if (value.stderr != ByteString.EMPTY) size += ProtoAdapter.BYTES.encodedSizeWithTag(2,
            value.stderr)
        if (value.exit_code != 0) size += ProtoAdapter.INT32.encodedSizeWithTag(3, value.exit_code)
        return size
      }

      override fun encode(writer: ProtoWriter, value: ExecSyncResponse) {
        if (value.stdout != ByteString.EMPTY) ProtoAdapter.BYTES.encodeWithTag(writer, 1,
            value.stdout)
        if (value.stderr != ByteString.EMPTY) ProtoAdapter.BYTES.encodeWithTag(writer, 2,
            value.stderr)
        if (value.exit_code != 0) ProtoAdapter.INT32.encodeWithTag(writer, 3, value.exit_code)
        writer.writeBytes(value.unknownFields)
      }

      override fun decode(reader: ProtoReader): ExecSyncResponse {
        var stdout: ByteString = ByteString.EMPTY
        var stderr: ByteString = ByteString.EMPTY
        var exit_code: Int = 0
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> stdout = ProtoAdapter.BYTES.decode(reader)
            2 -> stderr = ProtoAdapter.BYTES.decode(reader)
            3 -> exit_code = ProtoAdapter.INT32.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return ExecSyncResponse(
          stdout = stdout,
          stderr = stderr,
          exit_code = exit_code,
          unknownFields = unknownFields
        )
      }

      override fun redact(value: ExecSyncResponse): ExecSyncResponse = value.copy(
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
