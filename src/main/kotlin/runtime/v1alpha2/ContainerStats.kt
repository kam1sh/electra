// Code generated by Wire protocol buffer compiler, do not edit.
// Source: runtime.v1alpha2.ContainerStats in io/k8s/cri_api.proto
package runtime.v1alpha2

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import kotlin.hashCode
import kotlin.jvm.JvmField
import okio.ByteString

/**
 * ContainerStats provides the resource usage statistics for a container.
 */
class ContainerStats(
  /**
   * Information of the container.
   */
  @field:WireField(
    tag = 1,
    adapter = "runtime.v1alpha2.ContainerAttributes#ADAPTER",
    label = WireField.Label.OMIT_IDENTITY
  )
  val attributes: ContainerAttributes? = null,
  /**
   * CPU usage gathered from the container.
   */
  @field:WireField(
    tag = 2,
    adapter = "runtime.v1alpha2.CpuUsage#ADAPTER",
    label = WireField.Label.OMIT_IDENTITY
  )
  val cpu: CpuUsage? = null,
  /**
   * Memory usage gathered from the container.
   */
  @field:WireField(
    tag = 3,
    adapter = "runtime.v1alpha2.MemoryUsage#ADAPTER",
    label = WireField.Label.OMIT_IDENTITY
  )
  val memory: MemoryUsage? = null,
  /**
   * Usage of the writable layer.
   */
  @field:WireField(
    tag = 4,
    adapter = "runtime.v1alpha2.FilesystemUsage#ADAPTER",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "writableLayer"
  )
  val writable_layer: FilesystemUsage? = null,
  unknownFields: ByteString = ByteString.EMPTY
) : Message<ContainerStats, Nothing>(ADAPTER, unknownFields) {
  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN
  )
  override fun newBuilder(): Nothing = throw AssertionError()

  override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is ContainerStats) return false
    if (unknownFields != other.unknownFields) return false
    if (attributes != other.attributes) return false
    if (cpu != other.cpu) return false
    if (memory != other.memory) return false
    if (writable_layer != other.writable_layer) return false
    return true
  }

  override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + attributes.hashCode()
      result = result * 37 + cpu.hashCode()
      result = result * 37 + memory.hashCode()
      result = result * 37 + writable_layer.hashCode()
      super.hashCode = result
    }
    return result
  }

  override fun toString(): String {
    val result = mutableListOf<String>()
    if (attributes != null) result += """attributes=$attributes"""
    if (cpu != null) result += """cpu=$cpu"""
    if (memory != null) result += """memory=$memory"""
    if (writable_layer != null) result += """writable_layer=$writable_layer"""
    return result.joinToString(prefix = "ContainerStats{", separator = ", ", postfix = "}")
  }

  fun copy(
    attributes: ContainerAttributes? = this.attributes,
    cpu: CpuUsage? = this.cpu,
    memory: MemoryUsage? = this.memory,
    writable_layer: FilesystemUsage? = this.writable_layer,
    unknownFields: ByteString = this.unknownFields
  ): ContainerStats = ContainerStats(attributes, cpu, memory, writable_layer, unknownFields)

  companion object {
    @JvmField
    val ADAPTER: ProtoAdapter<ContainerStats> = object : ProtoAdapter<ContainerStats>(
      FieldEncoding.LENGTH_DELIMITED, 
      ContainerStats::class, 
      "type.googleapis.com/runtime.v1alpha2.ContainerStats", 
      PROTO_3, 
      null
    ) {
      override fun encodedSize(value: ContainerStats): Int {
        var size = value.unknownFields.size
        if (value.attributes != null) size += ContainerAttributes.ADAPTER.encodedSizeWithTag(1,
            value.attributes)
        if (value.cpu != null) size += CpuUsage.ADAPTER.encodedSizeWithTag(2, value.cpu)
        if (value.memory != null) size += MemoryUsage.ADAPTER.encodedSizeWithTag(3, value.memory)
        if (value.writable_layer != null) size += FilesystemUsage.ADAPTER.encodedSizeWithTag(4,
            value.writable_layer)
        return size
      }

      override fun encode(writer: ProtoWriter, value: ContainerStats) {
        if (value.attributes != null) ContainerAttributes.ADAPTER.encodeWithTag(writer, 1,
            value.attributes)
        if (value.cpu != null) CpuUsage.ADAPTER.encodeWithTag(writer, 2, value.cpu)
        if (value.memory != null) MemoryUsage.ADAPTER.encodeWithTag(writer, 3, value.memory)
        if (value.writable_layer != null) FilesystemUsage.ADAPTER.encodeWithTag(writer, 4,
            value.writable_layer)
        writer.writeBytes(value.unknownFields)
      }

      override fun decode(reader: ProtoReader): ContainerStats {
        var attributes: ContainerAttributes? = null
        var cpu: CpuUsage? = null
        var memory: MemoryUsage? = null
        var writable_layer: FilesystemUsage? = null
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> attributes = ContainerAttributes.ADAPTER.decode(reader)
            2 -> cpu = CpuUsage.ADAPTER.decode(reader)
            3 -> memory = MemoryUsage.ADAPTER.decode(reader)
            4 -> writable_layer = FilesystemUsage.ADAPTER.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return ContainerStats(
          attributes = attributes,
          cpu = cpu,
          memory = memory,
          writable_layer = writable_layer,
          unknownFields = unknownFields
        )
      }

      override fun redact(value: ContainerStats): ContainerStats = value.copy(
        attributes = value.attributes?.let(ContainerAttributes.ADAPTER::redact),
        cpu = value.cpu?.let(CpuUsage.ADAPTER::redact),
        memory = value.memory?.let(MemoryUsage.ADAPTER::redact),
        writable_layer = value.writable_layer?.let(FilesystemUsage.ADAPTER::redact),
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
