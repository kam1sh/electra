// Code generated by Wire protocol buffer compiler, do not edit.
// Source: runtime.v1alpha2.Protocol in io/k8s/cri_api.proto
package runtime.v1alpha2

import com.squareup.wire.EnumAdapter
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireEnum
import kotlin.Int
import kotlin.jvm.JvmField
import kotlin.jvm.JvmStatic

enum class Protocol(
  override val value: Int
) : WireEnum {
  TCP(0),

  UDP(1),

  SCTP(2);

  companion object {
    @JvmField
    val ADAPTER: ProtoAdapter<Protocol> = object : EnumAdapter<Protocol>(
      Protocol::class, 
      PROTO_3, 
      Protocol.TCP
    ) {
      override fun fromValue(value: Int): Protocol? = Protocol.fromValue(value)
    }

    @JvmStatic
    fun fromValue(value: Int): Protocol? = when (value) {
      0 -> TCP
      1 -> UDP
      2 -> SCTP
      else -> null
    }
  }
}
