// Code generated by Wire protocol buffer compiler, do not edit.
// Source: runtime.v1alpha2.WindowsContainerSecurityContext in io/k8s/cri_api.proto
package runtime.v1alpha2

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import com.squareup.wire.internal.sanitize
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import kotlin.hashCode
import kotlin.jvm.JvmField
import okio.ByteString

/**
 * WindowsContainerSecurityContext holds windows security configuration that will be applied to a
 * container.
 */
class WindowsContainerSecurityContext(
  /**
   * User name to run the container process as. If specified, the user MUST
   * exist in the container image and be resolved there by the runtime;
   * otherwise, the runtime MUST return error.
   */
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "runAsUsername"
  )
  val run_as_username: String = "",
  /**
   * The contents of the GMSA credential spec to use to run this container.
   */
  @field:WireField(
    tag = 2,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "credentialSpec"
  )
  val credential_spec: String = "",
  unknownFields: ByteString = ByteString.EMPTY
) : Message<WindowsContainerSecurityContext, Nothing>(ADAPTER, unknownFields) {
  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN
  )
  override fun newBuilder(): Nothing = throw AssertionError()

  override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is WindowsContainerSecurityContext) return false
    if (unknownFields != other.unknownFields) return false
    if (run_as_username != other.run_as_username) return false
    if (credential_spec != other.credential_spec) return false
    return true
  }

  override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + run_as_username.hashCode()
      result = result * 37 + credential_spec.hashCode()
      super.hashCode = result
    }
    return result
  }

  override fun toString(): String {
    val result = mutableListOf<String>()
    result += """run_as_username=${sanitize(run_as_username)}"""
    result += """credential_spec=${sanitize(credential_spec)}"""
    return result.joinToString(prefix = "WindowsContainerSecurityContext{", separator = ", ",
        postfix = "}")
  }

  fun copy(
    run_as_username: String = this.run_as_username,
    credential_spec: String = this.credential_spec,
    unknownFields: ByteString = this.unknownFields
  ): WindowsContainerSecurityContext = WindowsContainerSecurityContext(run_as_username,
      credential_spec, unknownFields)

  companion object {
    @JvmField
    val ADAPTER: ProtoAdapter<WindowsContainerSecurityContext> = object :
        ProtoAdapter<WindowsContainerSecurityContext>(
      FieldEncoding.LENGTH_DELIMITED, 
      WindowsContainerSecurityContext::class, 
      "type.googleapis.com/runtime.v1alpha2.WindowsContainerSecurityContext", 
      PROTO_3, 
      null
    ) {
      override fun encodedSize(value: WindowsContainerSecurityContext): Int {
        var size = value.unknownFields.size
        if (value.run_as_username != "") size += ProtoAdapter.STRING.encodedSizeWithTag(1,
            value.run_as_username)
        if (value.credential_spec != "") size += ProtoAdapter.STRING.encodedSizeWithTag(2,
            value.credential_spec)
        return size
      }

      override fun encode(writer: ProtoWriter, value: WindowsContainerSecurityContext) {
        if (value.run_as_username != "") ProtoAdapter.STRING.encodeWithTag(writer, 1,
            value.run_as_username)
        if (value.credential_spec != "") ProtoAdapter.STRING.encodeWithTag(writer, 2,
            value.credential_spec)
        writer.writeBytes(value.unknownFields)
      }

      override fun decode(reader: ProtoReader): WindowsContainerSecurityContext {
        var run_as_username: String = ""
        var credential_spec: String = ""
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> run_as_username = ProtoAdapter.STRING.decode(reader)
            2 -> credential_spec = ProtoAdapter.STRING.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return WindowsContainerSecurityContext(
          run_as_username = run_as_username,
          credential_spec = credential_spec,
          unknownFields = unknownFields
        )
      }

      override fun redact(value: WindowsContainerSecurityContext): WindowsContainerSecurityContext =
          value.copy(
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
