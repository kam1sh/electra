// Code generated by Wire protocol buffer compiler, do not edit.
// Source: runtime.v1alpha2.WindowsContainerResources in io/k8s/cri_api.proto
package runtime.v1alpha2

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import kotlin.hashCode
import kotlin.jvm.JvmField
import okio.ByteString

/**
 * WindowsContainerResources specifies Windows specific configuration for
 * resources.
 */
class WindowsContainerResources(
  /**
   * CPU shares (relative weight vs. other containers). Default: 0 (not specified).
   */
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#INT64",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "cpuShares"
  )
  val cpu_shares: Long = 0L,
  /**
   * Number of CPUs available to the container. Default: 0 (not specified).
   */
  @field:WireField(
    tag = 2,
    adapter = "com.squareup.wire.ProtoAdapter#INT64",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "cpuCount"
  )
  val cpu_count: Long = 0L,
  /**
   * Specifies the portion of processor cycles that this container can use as a percentage times
   * 100.
   */
  @field:WireField(
    tag = 3,
    adapter = "com.squareup.wire.ProtoAdapter#INT64",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "cpuMaximum"
  )
  val cpu_maximum: Long = 0L,
  /**
   * Memory limit in bytes. Default: 0 (not specified).
   */
  @field:WireField(
    tag = 4,
    adapter = "com.squareup.wire.ProtoAdapter#INT64",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "memoryLimitInBytes"
  )
  val memory_limit_in_bytes: Long = 0L,
  unknownFields: ByteString = ByteString.EMPTY
) : Message<WindowsContainerResources, Nothing>(ADAPTER, unknownFields) {
  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN
  )
  override fun newBuilder(): Nothing = throw AssertionError()

  override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is WindowsContainerResources) return false
    if (unknownFields != other.unknownFields) return false
    if (cpu_shares != other.cpu_shares) return false
    if (cpu_count != other.cpu_count) return false
    if (cpu_maximum != other.cpu_maximum) return false
    if (memory_limit_in_bytes != other.memory_limit_in_bytes) return false
    return true
  }

  override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + cpu_shares.hashCode()
      result = result * 37 + cpu_count.hashCode()
      result = result * 37 + cpu_maximum.hashCode()
      result = result * 37 + memory_limit_in_bytes.hashCode()
      super.hashCode = result
    }
    return result
  }

  override fun toString(): String {
    val result = mutableListOf<String>()
    result += """cpu_shares=$cpu_shares"""
    result += """cpu_count=$cpu_count"""
    result += """cpu_maximum=$cpu_maximum"""
    result += """memory_limit_in_bytes=$memory_limit_in_bytes"""
    return result.joinToString(prefix = "WindowsContainerResources{", separator = ", ", postfix =
        "}")
  }

  fun copy(
    cpu_shares: Long = this.cpu_shares,
    cpu_count: Long = this.cpu_count,
    cpu_maximum: Long = this.cpu_maximum,
    memory_limit_in_bytes: Long = this.memory_limit_in_bytes,
    unknownFields: ByteString = this.unknownFields
  ): WindowsContainerResources = WindowsContainerResources(cpu_shares, cpu_count, cpu_maximum,
      memory_limit_in_bytes, unknownFields)

  companion object {
    @JvmField
    val ADAPTER: ProtoAdapter<WindowsContainerResources> = object :
        ProtoAdapter<WindowsContainerResources>(
      FieldEncoding.LENGTH_DELIMITED, 
      WindowsContainerResources::class, 
      "type.googleapis.com/runtime.v1alpha2.WindowsContainerResources", 
      PROTO_3, 
      null
    ) {
      override fun encodedSize(value: WindowsContainerResources): Int {
        var size = value.unknownFields.size
        if (value.cpu_shares != 0L) size += ProtoAdapter.INT64.encodedSizeWithTag(1,
            value.cpu_shares)
        if (value.cpu_count != 0L) size += ProtoAdapter.INT64.encodedSizeWithTag(2, value.cpu_count)
        if (value.cpu_maximum != 0L) size += ProtoAdapter.INT64.encodedSizeWithTag(3,
            value.cpu_maximum)
        if (value.memory_limit_in_bytes != 0L) size += ProtoAdapter.INT64.encodedSizeWithTag(4,
            value.memory_limit_in_bytes)
        return size
      }

      override fun encode(writer: ProtoWriter, value: WindowsContainerResources) {
        if (value.cpu_shares != 0L) ProtoAdapter.INT64.encodeWithTag(writer, 1, value.cpu_shares)
        if (value.cpu_count != 0L) ProtoAdapter.INT64.encodeWithTag(writer, 2, value.cpu_count)
        if (value.cpu_maximum != 0L) ProtoAdapter.INT64.encodeWithTag(writer, 3, value.cpu_maximum)
        if (value.memory_limit_in_bytes != 0L) ProtoAdapter.INT64.encodeWithTag(writer, 4,
            value.memory_limit_in_bytes)
        writer.writeBytes(value.unknownFields)
      }

      override fun decode(reader: ProtoReader): WindowsContainerResources {
        var cpu_shares: Long = 0L
        var cpu_count: Long = 0L
        var cpu_maximum: Long = 0L
        var memory_limit_in_bytes: Long = 0L
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> cpu_shares = ProtoAdapter.INT64.decode(reader)
            2 -> cpu_count = ProtoAdapter.INT64.decode(reader)
            3 -> cpu_maximum = ProtoAdapter.INT64.decode(reader)
            4 -> memory_limit_in_bytes = ProtoAdapter.INT64.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return WindowsContainerResources(
          cpu_shares = cpu_shares,
          cpu_count = cpu_count,
          cpu_maximum = cpu_maximum,
          memory_limit_in_bytes = memory_limit_in_bytes,
          unknownFields = unknownFields
        )
      }

      override fun redact(value: WindowsContainerResources): WindowsContainerResources = value.copy(
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
