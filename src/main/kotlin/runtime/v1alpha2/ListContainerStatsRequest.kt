// Code generated by Wire protocol buffer compiler, do not edit.
// Source: runtime.v1alpha2.ListContainerStatsRequest in io/k8s/cri_api.proto
package runtime.v1alpha2

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import kotlin.hashCode
import kotlin.jvm.JvmField
import okio.ByteString

class ListContainerStatsRequest(
  /**
   * Filter for the list request.
   */
  @field:WireField(
    tag = 1,
    adapter = "runtime.v1alpha2.ContainerStatsFilter#ADAPTER",
    label = WireField.Label.OMIT_IDENTITY
  )
  val filter: ContainerStatsFilter? = null,
  unknownFields: ByteString = ByteString.EMPTY
) : Message<ListContainerStatsRequest, Nothing>(ADAPTER, unknownFields) {
  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN
  )
  override fun newBuilder(): Nothing = throw AssertionError()

  override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is ListContainerStatsRequest) return false
    if (unknownFields != other.unknownFields) return false
    if (filter != other.filter) return false
    return true
  }

  override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + filter.hashCode()
      super.hashCode = result
    }
    return result
  }

  override fun toString(): String {
    val result = mutableListOf<String>()
    if (filter != null) result += """filter=$filter"""
    return result.joinToString(prefix = "ListContainerStatsRequest{", separator = ", ", postfix =
        "}")
  }

  fun copy(filter: ContainerStatsFilter? = this.filter, unknownFields: ByteString =
      this.unknownFields): ListContainerStatsRequest = ListContainerStatsRequest(filter,
      unknownFields)

  companion object {
    @JvmField
    val ADAPTER: ProtoAdapter<ListContainerStatsRequest> = object :
        ProtoAdapter<ListContainerStatsRequest>(
      FieldEncoding.LENGTH_DELIMITED, 
      ListContainerStatsRequest::class, 
      "type.googleapis.com/runtime.v1alpha2.ListContainerStatsRequest", 
      PROTO_3, 
      null
    ) {
      override fun encodedSize(value: ListContainerStatsRequest): Int {
        var size = value.unknownFields.size
        if (value.filter != null) size += ContainerStatsFilter.ADAPTER.encodedSizeWithTag(1,
            value.filter)
        return size
      }

      override fun encode(writer: ProtoWriter, value: ListContainerStatsRequest) {
        if (value.filter != null) ContainerStatsFilter.ADAPTER.encodeWithTag(writer, 1,
            value.filter)
        writer.writeBytes(value.unknownFields)
      }

      override fun decode(reader: ProtoReader): ListContainerStatsRequest {
        var filter: ContainerStatsFilter? = null
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> filter = ContainerStatsFilter.ADAPTER.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return ListContainerStatsRequest(
          filter = filter,
          unknownFields = unknownFields
        )
      }

      override fun redact(value: ListContainerStatsRequest): ListContainerStatsRequest = value.copy(
        filter = value.filter?.let(ContainerStatsFilter.ADAPTER::redact),
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
